Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Final Test,,,,31-01-2024 21:13:13,31-01-2024 21:13:45,32.251s,ERROR
,,,,,,,
Test Cases/POST Create booking,,,,31-01-2024 21:13:13,31-01-2024 21:13:19,6.391s,ERROR
Start setup action : setupTestCase,,,,31-01-2024 21:13:13,31-01-2024 21:13:15,2.450s,PASSED
firstName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:15,31-01-2024 21:13:15,0.037s,PASSED
lastName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:15,31-01-2024 21:13:15,0.003s,PASSED
"println(""First Name: "" + firstName)",,,,31-01-2024 21:13:15,31-01-2024 21:13:15,0.003s,PASSED
"println(""Last Name: "" + lastName)",,,,31-01-2024 21:13:15,31-01-2024 21:13:15,0.001s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create booking,,31-01-2024 21:13:15,31-01-2024 21:13:17,1.831s,PASSED
"verifyResponseStatusCode(response, 200)",,The status should be 200,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.004s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verify response,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.029s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.014s,PASSED
"responseFirstName = getElementPropertyValue(response, ""booking.firstname"")",,,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.016s,PASSED
"responseLastName = getElementPropertyValue(response, ""booking.lastname"")",,,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.012s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:17,31-01-2024 21:13:17,0.010s,PASSED
"responseSearch = sendRequestAndVerify(findTestObject(""Object Repository/GET Search booking"", [""firstName"":responseFirstName, ""lastName"":responseLastName]))",,Send request search bookingID by first name and last name,,31-01-2024 21:13:17,31-01-2024 21:13:19,1.870s,ERROR
,,,,,,,
Test Cases/POST Create Multiple Booking,,,,31-01-2024 21:13:19,31-01-2024 21:13:24,4.677s,PASSED
Start setup action : setupTestCase,,,,31-01-2024 21:13:19,31-01-2024 21:13:21,1.434s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create Multiple Booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create multiple bookings,,31-01-2024 21:13:21,31-01-2024 21:13:22,1.251s,PASSED
"verifyResponseStatusCode(response, 200)",,The status code should be 200,,31-01-2024 21:13:22,31-01-2024 21:13:22,0.002s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verrify resonse body,,31-01-2024 21:13:22,31-01-2024 21:13:22,0.010s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:22,31-01-2024 21:13:22,0.009s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:22,31-01-2024 21:13:22,0.009s,PASSED
"responseGETRequest = sendRequestAndVerify(findTestObject(""Object Repository/GET Booking Ids"", [""id"":id]))",,Send GET Request to find booking infomation by ID,,31-01-2024 21:13:22,31-01-2024 21:13:24,1.903s,PASSED
"verifyResponseStatusCode(responseGETRequest, 200)",,Verify status code should be 200,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.002s,PASSED
responseBody = responseGETRequest.getResponseBodyContent(),,Verify body contain correct data,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.000s,PASSED
jsonResponse = JsonSlurper().parseText(responseBody),,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.001s,PASSED
firstNameRes = firstname,,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.001s,PASSED
lastNameRes = lastname,,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.000s,PASSED
"println(""RESPONE: "" + jsonResponse)",,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.001s,PASSED
"verifyEqual(lastNameRes, $lastName)",,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.005s,PASSED
"verifyEqual(firstNameRes, $firstName)",,,,31-01-2024 21:13:24,31-01-2024 21:13:24,0.001s,PASSED
,,,,,,,
Test Cases/POST Create Multiple Booking,,,,31-01-2024 21:13:24,31-01-2024 21:13:29,4.806s,PASSED
Start setup action : setupTestCase,,,,31-01-2024 21:13:24,31-01-2024 21:13:26,1.891s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create Multiple Booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create multiple bookings,,31-01-2024 21:13:26,31-01-2024 21:13:27,1.341s,PASSED
"verifyResponseStatusCode(response, 200)",,The status code should be 200,,31-01-2024 21:13:27,31-01-2024 21:13:27,0.002s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verrify resonse body,,31-01-2024 21:13:27,31-01-2024 21:13:27,0.017s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:27,31-01-2024 21:13:27,0.029s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:27,31-01-2024 21:13:27,0.009s,PASSED
"responseGETRequest = sendRequestAndVerify(findTestObject(""Object Repository/GET Booking Ids"", [""id"":id]))",,Send GET Request to find booking infomation by ID,,31-01-2024 21:13:27,31-01-2024 21:13:29,1.503s,PASSED
"verifyResponseStatusCode(responseGETRequest, 200)",,Verify status code should be 200,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.001s,PASSED
responseBody = responseGETRequest.getResponseBodyContent(),,Verify body contain correct data,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.000s,PASSED
jsonResponse = JsonSlurper().parseText(responseBody),,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.001s,PASSED
firstNameRes = firstname,,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.000s,PASSED
lastNameRes = lastname,,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.000s,PASSED
"println(""RESPONE: "" + jsonResponse)",,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.001s,PASSED
"verifyEqual(lastNameRes, $lastName)",,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.001s,PASSED
"verifyEqual(firstNameRes, $firstName)",,,,31-01-2024 21:13:29,31-01-2024 21:13:29,0.001s,PASSED
,,,,,,,
Test Cases/POST Create Multiple Booking,,,,31-01-2024 21:13:29,31-01-2024 21:13:34,5.337s,PASSED
Start setup action : setupTestCase,,,,31-01-2024 21:13:29,31-01-2024 21:13:31,1.889s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create Multiple Booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create multiple bookings,,31-01-2024 21:13:31,31-01-2024 21:13:33,2.033s,PASSED
"verifyResponseStatusCode(response, 200)",,The status code should be 200,,31-01-2024 21:13:33,31-01-2024 21:13:33,0.003s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verrify resonse body,,31-01-2024 21:13:33,31-01-2024 21:13:33,0.017s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:33,31-01-2024 21:13:33,0.013s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:33,31-01-2024 21:13:33,0.011s,PASSED
"responseGETRequest = sendRequestAndVerify(findTestObject(""Object Repository/GET Booking Ids"", [""id"":id]))",,Send GET Request to find booking infomation by ID,,31-01-2024 21:13:33,31-01-2024 21:13:34,1.341s,PASSED
"verifyResponseStatusCode(responseGETRequest, 200)",,Verify status code should be 200,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.002s,PASSED
responseBody = responseGETRequest.getResponseBodyContent(),,Verify body contain correct data,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.000s,PASSED
jsonResponse = JsonSlurper().parseText(responseBody),,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.000s,PASSED
firstNameRes = firstname,,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.000s,PASSED
lastNameRes = lastname,,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.000s,PASSED
"println(""RESPONE: "" + jsonResponse)",,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.000s,PASSED
"verifyEqual(lastNameRes, $lastName)",,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.001s,PASSED
"verifyEqual(firstNameRes, $firstName)",,,,31-01-2024 21:13:34,31-01-2024 21:13:34,0.001s,PASSED
,,,,,,,
Test Cases/PUT Update Booking,,,,31-01-2024 21:13:34,31-01-2024 21:13:39,5.056s,PASSED
Start setup action : setupTestCase,,,,31-01-2024 21:13:34,31-01-2024 21:13:36,1.887s,PASSED
firstName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:36,31-01-2024 21:13:36,0.002s,PASSED
lastName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:36,31-01-2024 21:13:36,0.001s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create booking,,31-01-2024 21:13:36,31-01-2024 21:13:38,1.561s,PASSED
"verifyResponseStatusCode(response, 200, STOP_ON_FAILURE)",,The status should be 200,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.009s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verify response,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.015s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.015s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.010s,PASSED
firstNameUpdate = $firstNameUpdate,,,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.001s,PASSED
lastNameUpdate = $lastNameUpdate,,,,31-01-2024 21:13:38,31-01-2024 21:13:38,0.000s,PASSED
"responseObject = sendRequest(findTestObject(""Object Repository/PUT Update Booking"", [""id"":id, ""firstNameUpdate"":firstNameUpdate, ""lastNameUpdate"":lastNameUpdate]))",,Send request update first name and last name,,31-01-2024 21:13:38,31-01-2024 21:13:39,1.471s,PASSED
"verifyResponseStatusCode(responseObject, 200, STOP_ON_FAILURE)",,Verify status code,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.003s,PASSED
responseBody = responseObject.getResponseBodyContent(),,Verify respone,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.001s,PASSED
jsonResponse = JsonSlurper().parseText(responseBody),,,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.001s,PASSED
firstNameRes = firstname,,,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.001s,PASSED
lastNameRes = lastname,,,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.000s,PASSED
"verifyEqual(lastNameRes, lastNameUpdate)",,,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.003s,PASSED
"verifyEqual(firstNameRes, firstNameUpdate)",,,,31-01-2024 21:13:39,31-01-2024 21:13:39,0.001s,PASSED
,,,,,,,
Test Cases/Ex 4- PATCH_DELETE Booking,,,,31-01-2024 21:13:39,31-01-2024 21:13:45,5.868s,PASSED
Start setup action : setupTestCase,,,,31-01-2024 21:13:39,31-01-2024 21:13:41,1.367s,PASSED
firstName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:41,31-01-2024 21:13:41,0.001s,PASSED
lastName = sample.Common.generateRandomString(),,,,31-01-2024 21:13:41,31-01-2024 21:13:41,0.000s,PASSED
"response = sendRequest(findTestObject(""Object Repository/POST Create booking"", [""firstName"":firstName, ""lastName"":lastName]))",,Send request create booking,,31-01-2024 21:13:41,31-01-2024 21:13:42,1.067s,PASSED
"verifyResponseStatusCode(response, 200, STOP_ON_FAILURE)",,The status should be 200,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.003s,PASSED
"verifyElementPropertyValue(response, ""booking.firstname"", $firstName)",,Verify response,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.016s,PASSED
"verifyElementPropertyValue(response, ""booking.lastname"", $lastName)",,,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.013s,PASSED
"id = getElementPropertyValue(response, ""bookingid"")",,,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.011s,PASSED
firstNameUpdate = $firstNameUpdate,,,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.000s,PASSED
lastNameUpdate = $lastNameUpdate,,,,31-01-2024 21:13:42,31-01-2024 21:13:42,0.001s,PASSED
"responseObject = sendRequest(findTestObject(""Object Repository/PATCH Update Booking"", [""id"":id, ""fName"":firstNameUpdate, ""lName"":lastNameUpdate]))",,Send request update first name and last name,,31-01-2024 21:13:42,31-01-2024 21:13:43,1.043s,PASSED
"verifyResponseStatusCode(responseObject, 200, STOP_ON_FAILURE)",,Verify status code,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.002s,PASSED
responseBody = responseObject.getResponseBodyContent(),,Verify respone,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.000s,PASSED
jsonResponse = JsonSlurper().parseText(responseBody),,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.001s,PASSED
firstNameRes = firstname,,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.001s,PASSED
lastNameRes = lastname,,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.000s,PASSED
"verifyEqual(lastNameRes, lastNameUpdate)",,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.001s,PASSED
"verifyEqual(firstNameRes, firstNameUpdate)",,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.001s,PASSED
"jsonPass = ""
{
  ""$id"": ""https://example.com/booking.schema.json"",
  ""$schema"": ""https://json-schema.org/draft/2020-12/schema"",
  ""type"": ""object"",
  ""properties"": {
    ""firstname"": { ""type"": ""string"" },
    ""lastname"": { ""type"": ""string"" },
    ""totalprice"": { ""type"": ""integer"" },
    ""depositpaid"": { ""type"": ""boolean"" },
    ""bookingdates"": {
      ""type"": ""object"",
      ""properties"": {
        ""checkin"": { ""type"": ""string"", ""format"": ""date"" },
        ""checkout"": { ""type"": ""string"", ""format"": ""date"" }
      },
      ""required"": [""checkin"", ""checkout""]
    },
    ""additionalneeds"": { ""type"": ""string"" }
  },
  ""required"": [""firstname"", ""lastname"", ""totalprice"", ""depositpaid"", ""bookingdates"", ""additionalneeds""]
}
""",,Verify schema of response body,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.000s,PASSED
"successful = validateJsonAgainstSchema(responseObject, jsonPass)",,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.036s,PASSED
"verifyEqual(successful, true)",,,,31-01-2024 21:13:43,31-01-2024 21:13:43,0.005s,PASSED
"responseDelete = sendRequest(findTestObject(""Object Repository/DELETE Booking"", [""id"":id]))",,Delete booking by ID,,31-01-2024 21:13:43,31-01-2024 21:13:44,1.041s,PASSED
"verifyResponseStatusCode(responseDelete, 201, STOP_ON_FAILURE)",,Verify status code,,31-01-2024 21:13:44,31-01-2024 21:13:44,0.003s,PASSED
"assert getResponseBodyContent().contains(""Created"")",,Verify response body,,31-01-2024 21:13:44,31-01-2024 21:13:44,0.009s,PASSED
"responseGETRequest = sendRequestAndVerify(findTestObject(""Object Repository/GET Booking Ids"", [""id"":id]))",,Send GET Request to find booking deleted by ID,,31-01-2024 21:13:44,31-01-2024 21:13:45,1.157s,PASSED
"verifyResponseStatusCode(responseGETRequest, 404, STOP_ON_FAILURE)",,Verify status code,,31-01-2024 21:13:45,31-01-2024 21:13:45,0.002s,PASSED
"assert getResponseBodyContent().contains(""Not Found"")",,Verify response body indicates the booking is no longer available.,,31-01-2024 21:13:45,31-01-2024 21:13:45,0.000s,PASSED
